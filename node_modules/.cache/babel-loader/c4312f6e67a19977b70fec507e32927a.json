{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/jttsa/Desktop/search-engine-for-books/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/jttsa/Desktop/search-engine-for-books/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/jttsa/Desktop/search-engine-for-books/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';// import { getMe, deleteBook } from '../utils/API';\nimport{GET_ME}from'../utils/queries';import{REMOVE_BOOK}from'../utils/mutation';import Auth from'../utils/auth';import{removeBookId}from'../utils/localStorage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SavedBooks=function SavedBooks(){var _useQuery=useQuery(GET_ME),loading=_useQuery.loading,data=_useQuery.data;var userData=(data===null||data===void 0?void 0:data.me)||[];var _useMutation=useMutation(REMOVE_BOOK),_useMutation2=_slicedToArray(_useMutation,2),removeBook=_useMutation2[0],error=_useMutation2[1].error;// const [userData, setUserData] = useState({});\n// use this to determine if `useEffect()` hook needs to run again\n// const userDataLength = Object.keys(userData).length;\n// useEffect(() => {\n//   const getUserData = async () => {\n//     try {\n//       const token = Auth.loggedIn() ? Auth.getToken() : null;\n//       if (!token) {\n//         return false;\n//       }\n//       const response = await getMe(token);\n//       if (!response.ok) {\n//         throw new Error('something went wrong!');\n//       }\n//       const user = await response.json();\n//       setUserData(user);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n//   getUserData();\n// }, [userDataLength]);\n// create function that accepts the book's mongo _id value as param and deletes the book from the database\nvar handleDeleteBook=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(bookId){var token,_yield$removeBook,_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return removeBook({variables:{bookId:bookId}});case 6:_yield$removeBook=_context.sent;_data=_yield$removeBook.data;// if (!response.ok) {\n//   throw new Error('something went wrong!');\n// }\n// const updatedUser = await response.json();\n// setUserData(updatedUser);\n// upon success, remove book's id from localStorage\nremoveBookId(bookId);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[3,11]]);}));return function handleDeleteBook(_x){return _ref.apply(this,arguments);};}();// if data isn't here yet, say so\nif(!loading){return/*#__PURE__*/_jsx(\"h2\",{children:\"LOADING...\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Jumbotron,{fluid:true,className:\"text-light bg-dark\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Viewing saved books!\"})})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:userData.savedBooks.length?\"Viewing \".concat(userData.savedBooks.length,\" saved \").concat(userData.savedBooks.length===1?'book':'books',\":\"):'You have no saved books!'}),/*#__PURE__*/_jsx(CardColumns,{children:userData.savedBooks.map(function(book){return/*#__PURE__*/_jsxs(Card,{border:\"dark\",children:[book.image?/*#__PURE__*/_jsx(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:book.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"small\",children:[\"Authors: \",book.authors]}),/*#__PURE__*/_jsx(Card.Text,{children:book.description}),/*#__PURE__*/_jsx(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);},children:\"Delete this Book!\"})]})]},book.bookId);})})]})]});};export default SavedBooks;","map":{"version":3,"sources":["C:/Users/jttsa/Desktop/search-engine-for-books/src/pages/SavedBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","GET_ME","REMOVE_BOOK","Auth","removeBookId","SavedBooks","useQuery","loading","data","userData","me","useMutation","removeBook","error","handleDeleteBook","bookId","token","loggedIn","getToken","variables","console","savedBooks","length","map","book","image","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\n// import { getMe, deleteBook } from '../utils/API';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutation';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n\n  const userData = data?.me || [];\n\n  const [removeBook, {error}] = useMutation(REMOVE_BOOK);\n\n  // const [userData, setUserData] = useState({});\n\n\n  // use this to determine if `useEffect()` hook needs to run again\n  // const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      // const response = await deleteBook(bookId, token);\n      const {data} = await removeBook({\n        variables: { bookId }\n      });\n\n      // if (!response.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n\n      // const updatedUser = await response.json();\n      // setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"]},"metadata":{},"sourceType":"module"}